name: Terraform Plan
on:
  workflow_dispatch:
  pull_request:
    branches: [main, dev]
    paths:
      - "terraform/**/*.nix"
      - "flake.nix"
      - "flake.lock"
jobs:
  plan:
    runs-on: ubuntu-latest
    environment: ${{ github.base_ref == 'refs/heads/main' && 'Production' || 'Development' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Nix
        uses: cachix/install-nix-action@v13
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/lb41az54kzk6j12p81br4bczary7m145/install
          install_options: "--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve"
          extra_nix_config: |
            experimental-features = nix-command flakes
      - name: Use binary cache for nix store
        uses: cachix/cachix-action@v10
        with:
          name: dailp
          # If you chose API tokens for write access OR if you have a private cache
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          pushFilter: "(-dailp$|-dailp-|-terraform-config$|-source$|\\.tar\\.gz$|-output$|-plan$|-apply-now$|-apply$)"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Terraform Plan
        run: nix develop --impure --command plan
        env:
          MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          AWS_VPC_ID: ${{ secrets.AWS_VPC_ID }}
          AWS_SUBNET_PRIMARY: ${{ secrets.AWS_SUBNET_PRIMARY }}
          AWS_ZONE_PRIMARY: ${{ secrets.AWS_ZONE_PRIMARY }}
          AWS_SUBNET_SECONDARY0: ${{ secrets.AWS_SUBNET_SECONDARY0 }}
          AWS_ZONE_SECONDARY0: ${{ secrets.AWS_ZONE_SECONDARY0 }}
          AWS_SUBNET_SECONDARY1: ${{ secrets.AWS_SUBNET_SECONDARY1 }}
          AWS_ZONE_SECONDARY1: ${{ secrets.AWS_ZONE_SECONDARY1 }}
          AWS_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
          GIT_REPOSITORY_URL: https://github.com/neu-dsg/dailp-encoding
          OAUTH_TOKEN: ${{ secrets.OAUTH_TOKEN }}
          RUST_LOG: info
          TF_STAGE: ${{ github.base_ref == 'refs/heads/main' && 'prod' || 'dev' }}
