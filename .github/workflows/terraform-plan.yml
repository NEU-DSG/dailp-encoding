name: Terraform Plan
on:
  workflow_dispatch:
  pull_request:
    branches: [main]
    paths:
      - "terraform/**/*.nix"
      - "flake.nix"
      - "flake.lock"
jobs:
  plan:
    runs-on: ubuntu-20.04
    environment: ${{ github.base_ref == 'main' && 'Development' || 'Production' }}
    env:
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
      AWS_VPC_ID: ${{ secrets.AWS_VPC_ID }}
      AWS_SUBNET_PRIMARY: ${{ secrets.AWS_SUBNET_PRIMARY }}
      AWS_ZONE_PRIMARY: ${{ secrets.AWS_ZONE_PRIMARY }}
      AWS_SUBNET_SECONDARY0: ${{ secrets.AWS_SUBNET_SECONDARY0 }}
      AWS_ZONE_SECONDARY0: ${{ secrets.AWS_ZONE_SECONDARY0 }}
      AWS_SUBNET_SECONDARY1: ${{ secrets.AWS_SUBNET_SECONDARY1 }}
      AWS_ZONE_SECONDARY1: ${{ secrets.AWS_ZONE_SECONDARY1 }}
      AWS_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
      GIT_REPOSITORY_URL: https://github.com/neu-dsg/dailp-encoding
      OAUTH_TOKEN: ${{ secrets.OAUTH_TOKEN }}
      RUST_LOG: info
      TF_STAGE: ${{ github.base_ref == 'main' && 'dev' || 'prod' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: ./.github/actions/setup
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          cachix-auth-token: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Terraform Plan
        run: nix develop --impure --command plan
