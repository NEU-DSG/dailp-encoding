service: dailp
useDotenv: true
provider:
  name: aws
  region: us-east-1
  runtime: rust
  memorySize: 512
  timeout: 30
  apiGateway:
    shouldStartNameWithService: true
  environment:
    MONGODB_PASSWORD: ${env:MONGODB_PASSWORD}
    MONGODB_USERNAME: ${env:MONGODB_USERNAME}
  vpc:
    securityGroupIds:
      - !Ref "DailpDBServerAccessSecurityGroup"
    subnetIds:
      - ${self:custom.database.subnetId1}
      - ${self:custom.database.subnetId2}
      - ${self:custom.database.subnetId3}
custom:
  database:
    mongoVersion: 4.2
    volumeType: io1
    volumeSize: 32
    iops: 1000
    instanceType: t3.small
    vpcId: ${env:AWS_VPC_ID}
    subnetId1: ${env:AWS_SUBNET_PRIMARY}
    subnetId2: ${env:AWS_SUBNET_SECONDARY0}
    subnetId3: ${env:AWS_SUBNET_SECONDARY1}
    zone1: us-east-1d
    zone2: us-east-1d
    zone3: us-east-1a
    replicaCount: 3
    replicaShardIndex: "0"
    keyName: dailp-database
    qsBucket: aws-quickstart
    qsKeyPrefix: quickstart-mongodb/
  serverless-translate-templateurls:
    s3Bucket: "dailp-prod-serverlessdeploymentbucket-1k5ja8qst262t --region us-east-1"
    inFolder: cf-templates
    outFolder: .serverless
  rust:
    dockerless: true
plugins:
  - serverless-rust
  - serverless-translate-templateurls
  - serverless-manifest-plugin
package:
  individually: true
functions:
  graphql:
    handler: dailp-graphql
    events:
      - http:
          path: "/graphql"
          method: any
          cors:
            origin: "*"
            headers: "*"
            allowCredentials: false
    environment:
      MONGODB_URI: !Sub
        - "mongodb://${NodeIp}:27017/admin?retryWrites=true&w=majority"
        - NodeIp: !GetAtt "DailpPrimaryReplicaNode0.Outputs.NodePrivateIp"
resources:
  - ${file(./.serverless/database.template.out.yaml)}
  - ${file(./.serverless/website.template.out.yaml)}
