{# -*- mode: web; -*- #}

{% macro any_segment(segment) %}
  {% if segment.type == "LineBreak" %}
    <lb n="{{segment.index}}"/>
  {% elif segment.type == "PageBreak" %}
    <pb facs="drs:page{{segment.index}}"/>
  {% elif segment.type == "Phrase" %}
    {{ self::phrase(segment=segment) }}
  {% elif segment.type == "Block" %}
    {{ self::block(segment=segment) }}
  {% elif segment.type == "Word" %}
    {{ self::word(segment=segment)  }}
  {% endif %}
{% endmacro any_segment %}

{% macro word(segment) %}
  <w xml:id="w{{segment.position.index}}" lemmaRef="lex:id">
    {% if segment.simplePhonetics or segment.phonemic or segment.morphemicSegmentation or segment.morphemeGloss or segment.englishGloss %}
      <choice>
        <orig>{{segment.source | convert_breaks(lb=segment.lineBreak, pb=segment.pageBreak) | safe}}</orig>
        {% if segment.simplePhonetics %}
          <seg type="simple_phonetics">{{segment.simplePhonetics}}</seg>
        {% endif %}
        {% if segment.phonemic %}
          <seg type="phonemic_form">{{segment.phonemic}}</seg>
        {% endif %}
        {% if segment.morphemicSegmentation | first %}
          <seg type="morphemic_segmentation">{{segment.morphemicSegmentation | join(sep="-")}}</seg>
        {% endif %}
        {% if segment.morphemeGloss | first %}
          <seg type="morphemic_gloss">{{segment.morphemeGloss | join(sep="-")}}</seg>
        {% endif %}
        {% if segment.englishGloss %}
          <seg type="gloss">{{segment.englishGloss | join(sep=", ")}}</seg>
        {% endif %}
      </choice>
    {% else %}
      {{segment.source | convert_breaks(lb=segment.lineBreak, pb=segment.pageBreak) | safe}}
    {% endif %}
  </w>
{% endmacro word %}

{% macro phrase(segment) %}
  <phr xml:id="p{{segment.index}}">
    {% for child in segment.parts %}
      {{ self::any_segment(segment=child) }}
    {% endfor %}
  </phr>
{% endmacro phrase %}

{% macro block(segment) %}
  <ab xml:id="b{{segment.index}}" corresp="#b{{segment.index}}_trans">
    {% for child in segment.parts %}
      {{ self::any_segment(segment=child) }}
    {% endfor %}
  </ab>
{% endmacro phrase %}

{% macro commentary(segment) %}
  {% if segment.type == "Word" and segment.commentary %}
    <note target="#w{{segment.position.index}}">
      {{segment.commentary}}
    </note>
  {% elif segment.parts %}
    {% for segment in segment.parts %}
      {{ self::commentary(segment=segment) }}
    {% endfor %}
  {% endif %}
{% endmacro commentary %}
