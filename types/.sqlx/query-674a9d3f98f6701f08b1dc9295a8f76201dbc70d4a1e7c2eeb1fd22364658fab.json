{
  "db_name": "PostgreSQL",
  "query": "-- Binds: user_id, resource_url, start, end, document_id\n\nwith upserted_audio_resource as (\n  insert into media_resource (url, recorded_at, recorded_by)\n  select $2::text, now(), $1\n  -- we do this no-op update to ensure an id is returned\n  on conflict (url) do update set url=excluded.url\n  returning id\n),\n\ninserted_audio_slice as (\n  insert into media_slice (resource_id, time_range)\n  select upserted_audio_resource.id, int8range($3, $4)\n  from upserted_audio_resource\n  returning id\n)\n\ninsert into document_user_media (document_id, media_slice_id)\n  select $5, inserted_audio_slice.id\n  from inserted_audio_slice\n  join document on document.id = $5\n    on conflict (media_slice_id, document_id) do nothing -- document already associated\n  returning media_slice_id",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "media_slice_id",
        "type_info": "Uuid"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Text",
        "Int8",
        "Int8",
        "Uuid"
      ]
    },
    "nullable": [
      false
    ]
  },
  "hash": "674a9d3f98f6701f08b1dc9295a8f76201dbc70d4a1e7c2eeb1fd22364658fab"
}
